<?php

declare(strict_types=1);

namespace Elements\Core\ControlStructure\Loop;

use Elements\Core\Node;
use Elements\Core\PHPNode;

/**
 * @package Elements\Architecture
 */
class ForEachLoop extends PHPNode
{
    /**
     * @var string
     */
    private string $collectionName;

    /**
     * @var string
     */
    private string $elementName;

    /**
     * @param string $collectionName
     * @param string $elementName
     */
    public function __construct(string $collectionName, string $elementName)
    {
        $this->collectionName = $collectionName;
        $this->elementName = $elementName;
    }

    public function appendNode(Node $node): void
    {
        parent::appendNode($node); // TODO: Change the autogenerated stub
    }

    /**
     * @return string
     */
    public function __toString(): string
    {
        $result = [sprintf('<?php foreach($%s as $%s): ?>', $this->collectionName, $this->elementName)];

        foreach ($this->getNodes() as $node) {
            $result[] = (string)$node;
        }

        $result[] = '<?php endforeach; ?>';

        return implode('', $result);
    }
}
